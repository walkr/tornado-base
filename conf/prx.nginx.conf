user www-data;
worker_processes 2;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    # multi_accept on;
    use epoll;
}

http {

    # Application Servers
    # --------------------
    upstream app_servers {
        server IP-PRIVATE-APP-1:8001;
        server IP-PRIVATE-APP-1:8002;

        server IP-PRIVATE-APP-2:8001;
        server IP-PRIVATE-APP-2:8002;
    }

    # Basic Settings
    # -----------------
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 3m;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all app_servers)

    proxy_next_upstream error;
    server_names_hash_bucket_size 64;

    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;


    # Gzip Settings + Tornado
    # ------------------------

    # Tornado
    # ---
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types application/octet-stream text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # Bellow default nginx settings
    # ---
    # gzip_vary on;
    # gzip_disable "msie6";
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;


    # Logging Settings
    # -------------------
    access_log /var/log/nginx.access.log;
    error_log /var/log/nginx.error.log;


    # Server
    # ----------------

    # Don't respond to naked IP

    server {
        listen 80;
        server_name "";
        return 444;
    }

    # Disallow these for now

    server {
        listen 80;
        server_name example.com www.example.com;
        return 444;
    }

    server {

        listen 80;
        server_name dev.example.com;

        # --------------------------
        # SSL
        # --------------------------
        listen               443 ssl;
        #ssl_certificate     /usr/local/apps/example.com/ssl/example.com.cert.pem;
        #ssl_certificate_key /usr/local/apps/example.com/ssl/example.com.key.pem;


        # --------------------------
        # Static Files
        # --------------------------
        location ^~ /static/ {
            root /usr/local/apps/example.com/app/www/;
            expires 1w;
            #if ($query_string) {
            #    expires max;
            #}
        }

        # Favicon + Robots
        # ---
        location = /favicon.ico {
            rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        # Root Location
        # ---
        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://app_servers;
        }
    }
}